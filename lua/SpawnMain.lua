---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by maudlin27.
--- DateTime: 26/10/2022 22:38
---

function IsTableEmpty(tTable, bEmptyIfNonTableWithValue)
    --Returns true if a table is empty
    --bEmptyIfNonTableWithValue - Optional, defaults to true; i.e. table treated as empty if non-table

    if (type(tTable) == "table") then
        if next (tTable) == nil then return true
        else
            for i1, v1 in pairs(tTable) do
                if IsTableEmpty(v1, false) == false then return false end
            end
            return true
        end
    else
        if tTable == nil then return true
        else
            if bEmptyIfNonTableWithValue == nil then return true
            else return bEmptyIfNonTableWithValue
            end
        end

    end
end
function TransferACU(oOriginalBrain)
    WaitSeconds(3)
    local bDebugMessages = false
    local iCycleCount = 0

    local tUnitsToTransfer
    while IsTableEmpty(tUnitsToTransfer) do
        iCycleCount = iCycleCount + 1
        WaitSeconds(1)
        tUnitsToTransfer = oOriginalBrain:GetListOfUnits(categories.COMMAND, false, true)
        if iCycleCount >= 120 then --Allow for intro scenes for campaign
            LOG('ERROR - No units found, will give up trying to find units to transfer')
            break
        else
            if bDebugMessages == true then LOG('iCycleCount='..iCycleCount..'; Is table of ACUs empty='..tostring(IsTableEmpty(tUnitsToTransfer))) end
        end
    end
    if bDebugMessages == true then LOG('Finished waiting, will try and transfer after iCycleCount='..iCycleCount..'; Is tUnitsToTransfer nil='..tostring(tUnitsToTransfer == nil)) end
    if tUnitsToTransfer then
        for iBrain, oBrain in ArmyBrains do
            if bDebugMessages == true then LOG('Considering if iBrain='..iBrain..' with nickname '..(oBrain.Nickname or 'nil')..' shoudl have the ACU transfered to it. IsAlly='..tostring(IsAlly(oOriginalBrain:GetArmyIndex(), oBrain:GetArmyIndex()))..'; Brain type='..(oBrain.BrainType or 'nil')) end
            if not(oBrain == oOriginalBrain) and IsAlly(oOriginalBrain:GetArmyIndex(), oBrain:GetArmyIndex()) and oBrain.BrainType == 'Human' then
                if bDebugMessages == true then LOG('Have a unit to transfer, checking if we have any units. Repru of oBrain='..repru(oBrain)..'; repr of oOriginalBrain='..repru(oOriginalBrain)) end
                for iUnit, oUnit in tUnitsToTransfer do
                    if bDebugMessages == true then LOG('iUnit='..iUnit..'; oUnit='..oUnit.UnitId) end
                    local tSpawnLocation = {oUnit:GetPosition()[1], oUnit:GetPosition()[2], oUnit:GetPosition()[3]}
                    local sSpawnID = oUnit.UnitId
                    oUnit:Destroy()
                    local oNewUnit = CreateUnit(sSpawnID, oBrain.Army, tSpawnLocation[1], tSpawnLocation[2], tSpawnLocation[3], 0, 0, 0, 0, 'Land')
                    LOG('Attempted to create unit with sSpawnID='..sSpawnID..' for army '..oBrain.Army..' at location '..repru(tSpawnLocation))
                end
                break
            end
        end
    else
        LOG('Error - No units to transfer')
    end
end
